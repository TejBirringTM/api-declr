import type { z } from "zod";
import type { HttpStatus, HttpStatusMap } from "./http-status";
import type { ApiResponseHeaders, ApiResponseSchema } from "./schema";
import type { ErrorCode, ErrorsMap } from "../error/_/errors-map";

/**
 * Represents the response object, generated by ApiResponseGeneratorFn,
 * contrained by given HTTP status and schema.
 */
export type ApiResponseSpec<
    Status extends HttpStatus,
    Schema extends ApiResponseSchema<Status>,
> = {
    status: Status;
    body: z.infer<Schema["body"]>;
    headers: z.infer<Schema["headers"]>;
};

/**
 * Deduces response body type from the response object (ApiResponseSpec).
 */
export type ApiResponseBody<T> =
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    T extends ApiResponseSpec<infer Status, infer Schema>
        ? {
              status: Status;
              statusCode: HttpStatusMap[Status]["statusCode"];
              statusType: HttpStatusMap[Status]["category"];
              data: T["body"];
          }
        : never;

/**
 * Represents the response object for error responses,
 * generated by thrown error object (ApiRequestError).
 */
export type ApiErrorResponseSpec<E extends ErrorCode> = {
    status: ErrorsMap[E]["status"];
    body: {
        name: E;
        message: string;
    };
    headers: ApiResponseHeaders<ErrorsMap[E]["status"]>;
};
